/*
 * This file was last modified at 2024-05-13 16:44 by Victor N. Skurikhin.
 * docs.go
 * $Id$
 */

// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import (
	"github.com/swaggo/swag"
	"github.com/vskurikhin/gophermart/internal/env"
)

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user/balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "получение текущего баланса пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "баланс",
                "responses": {
                    "200": {
                        "description": "успешная обработка запроса",
                        "schema": {
                            "$ref": "#/definitions/model.Balance"
                        }
                    },
                    "401": {
                        "description": "пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/balance/withdraw": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "запрос на списание средств",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "списание",
                "parameters": [
                    {
                        "description": "Формат запроса JSON (body)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Withdraw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "успешная обработка запроса",
                        "schema": {
                            "$ref": "#/definitions/model.Withdraw"
                        }
                    },
                    "401": {
                        "description": "пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "402": {
                        "description": "на счету недостаточно средств",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "422": {
                        "description": "неверный номер заказа",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "security": [
                    {
                        "none": []
                    }
                ],
                "description": "аутентификация пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "аутентификация",
                "parameters": [
                    {
                        "description": "Формат запроса JSON (body)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "пользователь успешно аутентифицирован",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "401": {
                        "description": "неверная пара логин/пароль",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "список загруженных номеров заказов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "заказы",
                "responses": {
                    "200": {
                        "description": "успешная обработка запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Order"
                            }
                        }
                    },
                    "401": {
                        "description": "пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "загрузка номера заказа",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "заказ",
                "parameters": [
                    {
                        "description": "Формат запроса номер (body)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "номер заказа уже был загружен этим пользователем",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "202": {
                        "description": "новый номер заказа принят в обработку",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "401": {
                        "description": "пользователь не аутентифицирован",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "409": {
                        "description": "номер заказа уже был загружен другим пользователем",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "422": {
                        "description": "неверный формат номера заказа",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "регистрация пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "регистрация",
                "parameters": [
                    {
                        "description": "Формат запроса JSON (body)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "пользователь успешно зарегистрирован и аутентифицирован",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "409": {
                        "description": "логин уже занят",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/withdrawals": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "получение информации о выводе средств",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "информация о выводе средств",
                "responses": {
                    "200": {
                        "description": "успешная обработка запроса",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Withdraw"
                            }
                        }
                    },
                    "204": {
                        "description": "нет ни одного списания",
                        "schema": {
                            "$ref": "#/definitions/model.Empty"
                        }
                    },
                    "401": {
                        "description": "пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/model.JSONError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Balance": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number",
                    "example": 500.5
                },
                "withdrawn": {
                    "type": "number",
                    "example": 42
                }
            }
        },
        "model.Empty": {
            "type": "object"
        },
        "model.JSONError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "accrual": {
                    "type": "number",
                    "example": 500
                },
                "number": {
                    "type": "string",
                    "example": "9278923470"
                },
                "status": {
                    "type": "string",
                    "example": "PROCESSED"
                },
                "uploaded_at": {
                    "type": "string",
                    "example": "2020-12-10T15:15:45+03:00"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "login": {
                    "description": "логин",
                    "type": "string"
                },
                "password": {
                    "description": "пароль",
                    "type": "string"
                }
            }
        },
        "model.Withdraw": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "example": "2377225624"
                },
                "processed_at": {
                    "type": "string",
                    "example": "2020-12-09T16:09:57+03:00"
                },
                "sum": {
                    "type": "number",
                    "example": 751
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             env.GetConfig().Address(),
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "GopherMart API",
	Description:      "This is a sample server GopherMart server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
