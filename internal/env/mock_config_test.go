/*
 * This file was last modified at 2024-04-20 23:51 by Victor N. Skurikhin.
 * mock_config_test.go
 * $Id$
 */

// Code generated by MockGen. DO NOT EDIT.
// Source: env/config.go
//
// Generated by this command:
//
//	mockgen -source=env/config.go -package env
//

// Package env is a generated GoMock package.
package env

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfig is a mock of Config interface.
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig.
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance.
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// AccrualSystemAddress mocks base method.
func (m *MockConfig) AccrualSystemAddress() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccrualSystemAddress")
	ret0, _ := ret[0].(string)
	return ret0
}

// AccrualSystemAddress indicates an expected call of AccrualSystemAddress.
func (mr *MockConfigMockRecorder) AccrualSystemAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccrualSystemAddress", reflect.TypeOf((*MockConfig)(nil).AccrualSystemAddress))
}

// Address mocks base method.
func (m *MockConfig) Address() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Address")
	ret0, _ := ret[0].(string)
	return ret0
}

// Address indicates an expected call of Address.
func (mr *MockConfigMockRecorder) Address() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Address", reflect.TypeOf((*MockConfig)(nil).Address))
}

// DataBaseDSN mocks base method.
func (m *MockConfig) DataBaseDSN() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DataBaseDSN")
	ret0, _ := ret[0].(string)
	return ret0
}

// DataBaseDSN indicates an expected call of DataBaseDSN.
func (mr *MockConfigMockRecorder) DataBaseDSN() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DataBaseDSN", reflect.TypeOf((*MockConfig)(nil).DataBaseDSN))
}

// Key mocks base method.
func (m *MockConfig) Key() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Key")
	ret0, _ := ret[0].(string)
	return ret0
}

// Key indicates an expected call of Key.
func (mr *MockConfigMockRecorder) Key() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Key", reflect.TypeOf((*MockConfig)(nil).Key))
}
